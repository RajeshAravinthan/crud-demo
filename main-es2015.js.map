{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/fileupload/fileupload.component.ts","./src/app/components/fileupload/fileupload.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/service/api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// component\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { FileuploadComponent } from './components/fileupload/fileupload.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'file_upload', component: FileuploadComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { apiService } from './service/api.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'CRUD-TEST-GODB';\r\n  loggedUser: boolean;\r\n  constructor(private router: Router, public api: apiService) {}\r\n  ngOnInit(): void {}\r\n\r\n  logout = () => {\r\n    sessionStorage.removeItem('login');\r\n  };\r\n}\r\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n  <ul class=\"navbar-nav\">\r\n    <li class=\"nav-item active\">\r\n      <a class=\"nav-link\" href=\"#\">GoDB</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"dashboard\" *ngIf=\"api.loggedIn\">\r\n        Dashboard\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"file_upload\" *ngIf=\"api.loggedIn\">\r\n        File Upload\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <ul class=\"navbar-nav ml-auto\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"register\" *ngIf=\"!api.loggedIn\">\r\n        Register\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"\" *ngIf=\"!api.loggedIn\">\r\n        Login\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"logout()\" href=\"#\" *ngIf=\"api.loggedIn\">\r\n        LogOut\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { FileuploadComponent } from './components/fileupload/fileupload.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    FileuploadComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { apiService } from '../../service/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  getData = [];\r\n  userSession = [];\r\n\r\n  constructor(private api: apiService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    // Check user login or not\r\n    if (sessionStorage.getItem('login') == 'true') {\r\n      this.api.loggedIn = true;\r\n    } else {\r\n      this.api.loggedIn = false;\r\n      this.router.navigate(['login']);\r\n    }\r\n\r\n    // Sample api get datas\r\n    this.api.getUsers().subscribe(\r\n      (response) => {\r\n        if (response.status === 0) {\r\n          console.log(response);\r\n        } else {\r\n          this.getData = response;\r\n        }\r\n      },\r\n      (err) => {}\r\n    );\r\n\r\n    // Get User Datas\r\n    this.userSession = JSON.parse(sessionStorage.getItem('register'));\r\n  }\r\n}\r\n","<h3>User List</h3>\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Email</th>\n      <th>Mobile</th>\n      <th>Gender</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let sessionData of userSession\">\n      <td>{{sessionData.firstname}} {{sessionData.lastname}}</td>\n      <td>{{sessionData.email}}</td>\n      <td>{{sessionData.mobile}}</td>\n      <td>{{sessionData.gender}}</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3>Sample api</h3>\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Title</th>\n      <th>UserID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of getData\">\n      <td>{{user.id}}</td>\n      <td>{{user.title}}</td>\n      <td>{{user.userId}}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { apiService } from '../../service/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fileupload',\n  templateUrl: './fileupload.component.html',\n  styleUrls: ['./fileupload.component.css'],\n})\nexport class FileuploadComponent implements OnInit {\n  uploadSuccess: boolean;\n  data: any = [];\n  fileToUpload: File = null;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private api: apiService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('login') == 'true') {\n      this.api.loggedIn = true;\n    } else {\n      this.api.loggedIn = false;\n      this.router.navigate(['login']);\n    }\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  upload(files: File[]) {\n    this.uploadAndProgress(files);\n  }\n\n  uploadAndProgress(files: File[]) {\n    var formData = new FormData();\n    Array.from(files).forEach((f) => formData.append('file', f));\n\n    const file = files[0];\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      sessionStorage.setItem('file', reader.result.toString());\n    };\n\n    var temp = {\n      name: files[0].name,\n      email: 'abc@gmail.com',\n      file: this.getSantizeUrl(sessionStorage.getItem('file')),\n    };\n    sessionStorage.setItem('data', temp.toString());\n\n    this.data.push(temp);\n  }\n\n  public getSantizeUrl(url: string) {\n    return url;\n  }\n}\n","<div class=\"card card-body mb-3\">\r\n  <br />\r\n  <p>Choose png/JPG below 1mb only</p>\r\n  <input type=\"file\" (change)=\"upload($event.target.files)\" />\r\n\r\n\r\n  <ng-container *ngIf=\"uploadSuccess\">\r\n    Upload Successful\r\n  </ng-container>\r\n  <div *ngFor=\"let obj of data\">\r\n    <a [href]=\"getSantizeUrl(obj.file)\" download=\"{{obj.name}}\">{{getSantizeUrl(obj.name)}}</a>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { apiService } from '../../service/api.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @ViewChild('logInFormData') loginData: NgForm;\r\n  submit: boolean = false;\r\n  sessionData;\r\n  email: string;\r\n  pwd: string;\r\n  constructor(private router: Router, public api: apiService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // check autheticate user\r\n\r\n  autheticateUser = () => {\r\n    var temp = [];\r\n    var checkUser = [];\r\n    this.submit = true;\r\n    this.sessionData = JSON.parse(sessionStorage.getItem('register'));\r\n    if (this.sessionData !== null) {\r\n      this.sessionData.forEach((element) => {\r\n        var tempdata = { email: element.email, pwd: element.pwd };\r\n        temp.push(tempdata);\r\n      });\r\n      temp = temp.map((obj) => {\r\n        if (this.loginData.value.email.toString() == obj.email.toString()) {\r\n          checkUser.push({ email: obj.email, pwd: obj.pwd });\r\n        }\r\n      });\r\n      console.log(checkUser);\r\n      if (checkUser.length === 0) {\r\n        Swal.fire('User Not Registered');\r\n        return false;\r\n      } else if (checkUser.length === 1) {\r\n        if (checkUser[0].pwd === this.loginData.value.pwd) {\r\n          this.router.navigate(['dashboard']);\r\n          sessionStorage.setItem('login', 'true');\r\n          this.api.loggedIn = true;\r\n        } else {\r\n          Swal.fire('Please Check Your Credentials');\r\n        }\r\n      }\r\n    } else {\r\n      Swal.fire('Invalid user');\r\n    }\r\n  };\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2>Login GoDB</h2>\r\n          <form name=\"login\" (ngSubmit)=\"autheticateUser()\" #logInFormData=\"ngForm\">\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email:</label>\r\n              <input type=\"email\" class=\"form-control\" placeholder=\"Enter Email\" ngModel name=\"email\" #email=\"ngModel\"\r\n                required>\r\n\r\n              <div>\r\n                <span class=\"help-block helper\" *ngIf=\"!email.valid && email.touched\">Please Enter Valid Email</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"pwd\">Password:</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" ngModel name=\"pwd\"\r\n                required>\r\n              <span class=\"help-block helper\" *ngIf=\"!email.valid && email.touched\">Please Enter Password</span>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-default\">Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @ViewChild('RegistrationFormData') RegistrationData: NgForm;\r\n\r\n  submit: boolean = false;\r\n  passError: boolean = false;\r\n  totalset: any;\r\n  constructor(private router: Router) {}\r\n  ngOnInit(): void {}\r\n\r\n  // user register metho\r\n  RegisterUser() {\r\n    this.submit = true;\r\n    if (this.RegistrationData.valid) {\r\n      if (\r\n        this.RegistrationData.value.pwd !== this.RegistrationData.value.confpwd\r\n      ) {\r\n        this.passError = true;\r\n        return false;\r\n      }\r\n      var totaldataset;\r\n      if (\r\n        JSON.parse(sessionStorage.getItem('register')) === null ||\r\n        JSON.parse(sessionStorage.getItem('register')) === undefined\r\n      ) {\r\n        totaldataset = [];\r\n      } else {\r\n        totaldataset = JSON.parse(sessionStorage.getItem('register'));\r\n      }\r\n\r\n      totaldataset.push(this.RegistrationData.value);\r\n      sessionStorage.setItem('register', JSON.stringify(totaldataset));\r\n      this.router.navigate(['']);\r\n    } else {\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2>Register Form</h2>\r\n          <form name=\"register\" (ngSubmit)=\"RegisterUser()\" #RegistrationFormData=\"ngForm\">\r\n            <div class=\"form-group\">\r\n              <label for=\"firtname\">First Name: *</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"firstname\" ngModel #firstname=\"ngModel\"\r\n                placeholder=\"Enter First Name\" name=\"firstname\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"lastname\">Last Name: *</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"lastname\" placeholder=\"Enter Last Name\" ngModel\r\n                #lastname=\"ngModel\" name=\"lastname\" required>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email: *</label>\r\n              <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" ngModel #email=\"ngModel\"\r\n                pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\r\n                name=\"email\" required>\r\n              <div>\r\n                <span class=\"help-block helper\" *ngIf=\"!email.valid && email.touched || submit && !email.valid\">Please\r\n                  Enter Valid Email</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"mobile\">Mobile: *</label>\r\n              <input type=\"number\" class=\"form-control\" id=\"mobile\" placeholder=\"Enter Mobile number\"\r\n                pattern=\"^((\\\\+91-?)|0)?[0-9]{10}$\" ngModel #mobile=\"ngModel\" name=\"mobile\" required>\r\n              <div>\r\n                <span class=\"help-block helper\"\r\n                  *ngIf=\"!mobile.valid && mobile.touched || submit && !mobile.valid\">Please Enter\r\n                  Valid Mobile</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"checkbox\">\r\n              <label>Gender : *</label>\r\n              <br>\r\n              <label> <input type=\"radio\" ngModel #gender=\"ngModel\" name=\"gender\" value=\"male\" required> Male </label>\r\n              <label><input type=\"radio\" name=\"gender\" ngModel #gender=\"ngModel\" value=\"female\" required> Female</label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"mobile\">Address: *</label>\r\n              <textarea class=\"form-control\" rows=\"5\" id=\"address\" placeholder=\"Enter Address\" name=\"address\"\r\n                required></textarea>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"pwd\">Password: *</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\" ngModel\r\n                #password=\"ngModel\" required minlength=\"8\">\r\n              <div>\r\n                <span class=\"help-block helper\"\r\n                  *ngIf=\"!password.valid && password.touched || submit && !password.valid\">Please Enter Valid\r\n                  password</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"confrmpwd\">Confirm Password: *</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"confrmpwd\" minlength=\"8\"\r\n                placeholder=\"Enter Confirm Password\" ngModel #confrmpwd=\"ngModel\" name=\"confpwd\" required>\r\n              <div>\r\n                <span class=\"help-block helper\"\r\n                  *ngIf=\"!confrmpwd.valid && confrmpwd.touched || submit && !confrmpwd.valid\">Please Enter Valid\r\n                  Confirm password</span>\r\n                <span *ngIf=\"passError\" class=\"help-block helper\">Password Mismatch</span>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n@Injectable({ providedIn: 'root' })\r\nexport class apiService {\r\n  public mode: string = 'DEV';\r\n  public url: string = '';\r\n  public loggedIn: Boolean = false;\r\n  constructor(public http: HttpClient, public router: Router) {\r\n    switch (this.mode) {\r\n      case 'DEV': {\r\n        this.url = 'https://jsonplaceholder.typicode.com/todos';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(this.url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}