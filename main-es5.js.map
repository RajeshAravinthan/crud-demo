{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/fileupload/fileupload.component.ts","webpack:///src/app/components/fileupload/fileupload.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/service/api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","api","title","logout","sessionStorage","removeItem","routeMenu","url","navigateByUrl","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","getData","userSession","getItem","loggedIn","navigate","getUsers","subscribe","response","status","console","log","err","JSON","parse","FileuploadComponent","sanitizer","data","fileToUpload","files","item","uploadAndProgress","formData","FormData","Array","from","forEach","f","append","file","reader","FileReader","readAsDataURL","onload","setItem","result","toString","temp","name","email","getSantizeUrl","push","upload","LoginComponent","submit","autheticateUser","checkUser","sessionData","element","tempdata","pwd","map","obj","loginData","value","length","fire","RegisterComponent","passError","RegistrationData","valid","confpwd","totaldataset","undefined","stringify","RegisterUser","apiService","http","mode","get","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// component\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { FileuploadComponent } from './components/fileupload/fileupload.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'file_upload', component: FileuploadComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { apiService } from './service/api.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'CRUD-TEST-GODB';\r\n  loggedUser: boolean;\r\n  constructor(private router: Router, public api: apiService) {}\r\n  ngOnInit(): void {}\r\n\r\n  logout = () => {\r\n    sessionStorage.removeItem('login');\r\n  };\r\n  routeMenu = (url) => {\r\n    this.router.navigateByUrl(`/${url}`);\r\n  };\r\n}\r\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n  <ul class=\"navbar-nav\">\r\n    <li class=\"nav-item active\">\r\n      <a class=\"nav-link\" href=\"#\">GoDB</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"routeMenu('dashboard')\" *ngIf=\"api.loggedIn\">\r\n        Dashboard\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"routeMenu('file_upload')\" *ngIf=\"api.loggedIn\">\r\n        File Upload\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <ul class=\"navbar-nav ml-auto\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"routeMenu('register')\" *ngIf=\"!api.loggedIn\">\r\n        Register\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"routeMenu('login')\" *ngIf=\"!api.loggedIn\">\r\n        Login\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" (click)=\"logout()\" href=\"#\" *ngIf=\"api.loggedIn\">\r\n        LogOut\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { FileuploadComponent } from './components/fileupload/fileupload.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    FileuploadComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { apiService } from '../../service/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  getData = [];\r\n  userSession = [];\r\n\r\n  constructor(private api: apiService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    // Check user login or not\r\n    if (sessionStorage.getItem('login') == 'true') {\r\n      this.api.loggedIn = true;\r\n    } else {\r\n      this.api.loggedIn = false;\r\n      this.router.navigate(['login']);\r\n    }\r\n\r\n    // Sample api get datas\r\n    this.api.getUsers().subscribe(\r\n      (response) => {\r\n        if (response.status === 0) {\r\n          console.log(response);\r\n        } else {\r\n          this.getData = response;\r\n        }\r\n      },\r\n      (err) => {}\r\n    );\r\n\r\n    // Get User Datas\r\n    this.userSession = JSON.parse(sessionStorage.getItem('register'));\r\n  }\r\n}\r\n","<h3>User List</h3>\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Email</th>\n      <th>Mobile</th>\n      <th>Gender</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let sessionData of userSession\">\n      <td>{{sessionData.firstname}} {{sessionData.lastname}}</td>\n      <td>{{sessionData.email}}</td>\n      <td>{{sessionData.mobile}}</td>\n      <td>{{sessionData.gender}}</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3>Sample api</h3>\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Title</th>\n      <th>UserID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of getData\">\n      <td>{{user.id}}</td>\n      <td>{{user.title}}</td>\n      <td>{{user.userId}}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { apiService } from '../../service/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fileupload',\n  templateUrl: './fileupload.component.html',\n  styleUrls: ['./fileupload.component.css'],\n})\nexport class FileuploadComponent implements OnInit {\n  uploadSuccess: boolean;\n  data: any = [];\n  fileToUpload: File = null;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private api: apiService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('login') == 'true') {\n      this.api.loggedIn = true;\n    } else {\n      this.api.loggedIn = false;\n      this.router.navigate(['login']);\n    }\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  upload(files: File[]) {\n    this.uploadAndProgress(files);\n  }\n\n  uploadAndProgress(files: File[]) {\n    var formData = new FormData();\n    Array.from(files).forEach((f) => formData.append('file', f));\n\n    const file = files[0];\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      sessionStorage.setItem('file', reader.result.toString());\n    };\n\n    var temp = {\n      name: files[0].name,\n      email: 'abc@gmail.com',\n      file: this.getSantizeUrl(sessionStorage.getItem('file')),\n    };\n    sessionStorage.setItem('data', temp.toString());\n\n    this.data.push(temp);\n  }\n\n  public getSantizeUrl(url: string) {\n    return url;\n  }\n}\n","<div class=\"card card-body mb-3\">\r\n  <br />\r\n  <p>Choose png/JPG below 1mb only</p>\r\n  <input type=\"file\" (change)=\"upload($event.target.files)\" />\r\n\r\n\r\n  <ng-container *ngIf=\"uploadSuccess\">\r\n    Upload Successful\r\n  </ng-container>\r\n  <div *ngFor=\"let obj of data\">\r\n    <a [href]=\"getSantizeUrl(obj.file)\" download=\"{{obj.name}}\">{{getSantizeUrl(obj.name)}}</a>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { apiService } from '../../service/api.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @ViewChild('logInFormData') loginData: NgForm;\r\n  submit: boolean = false;\r\n  sessionData;\r\n  email: string;\r\n  pwd: string;\r\n  constructor(private router: Router, public api: apiService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // check autheticate user\r\n\r\n  autheticateUser = () => {\r\n    var temp = [];\r\n    var checkUser = [];\r\n    this.submit = true;\r\n    this.sessionData = JSON.parse(sessionStorage.getItem('register'));\r\n    if (this.sessionData !== null) {\r\n      this.sessionData.forEach((element) => {\r\n        var tempdata = { email: element.email, pwd: element.pwd };\r\n        temp.push(tempdata);\r\n      });\r\n      temp = temp.map((obj) => {\r\n        if (this.loginData.value.email.toString() == obj.email.toString()) {\r\n          checkUser.push({ email: obj.email, pwd: obj.pwd });\r\n        }\r\n      });\r\n      console.log(checkUser);\r\n      if (checkUser.length === 0) {\r\n        Swal.fire('User Not Registered');\r\n        return false;\r\n      } else if (checkUser.length === 1) {\r\n        if (checkUser[0].pwd === this.loginData.value.pwd) {\r\n          this.router.navigate(['dashboard']);\r\n          sessionStorage.setItem('login', 'true');\r\n          this.api.loggedIn = true;\r\n        } else {\r\n          Swal.fire('Please Check Your Credentials');\r\n        }\r\n      }\r\n    } else {\r\n      Swal.fire('Invalid user');\r\n    }\r\n  };\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2>Login GoDB</h2>\r\n          <form name=\"login\" (ngSubmit)=\"autheticateUser()\" #logInFormData=\"ngForm\">\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email:</label>\r\n              <input type=\"email\" class=\"form-control\" placeholder=\"Enter Email\" ngModel name=\"email\" #email=\"ngModel\"\r\n                required>\r\n\r\n              <div>\r\n                <span class=\"help-block helper\" *ngIf=\"!email.valid && email.touched\">Please Enter Valid Email</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"pwd\">Password:</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" ngModel name=\"pwd\"\r\n                required>\r\n              <span class=\"help-block helper\" *ngIf=\"!email.valid && email.touched\">Please Enter Password</span>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-default\">Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @ViewChild('RegistrationFormData') RegistrationData: NgForm;\r\n\r\n  submit: boolean = false;\r\n  passError: boolean = false;\r\n  totalset: any;\r\n  constructor(private router: Router) {}\r\n  ngOnInit(): void {}\r\n\r\n  // user register metho\r\n  RegisterUser() {\r\n    this.submit = true;\r\n    if (this.RegistrationData.valid) {\r\n      if (\r\n        this.RegistrationData.value.pwd !== this.RegistrationData.value.confpwd\r\n      ) {\r\n        this.passError = true;\r\n        return false;\r\n      }\r\n      var totaldataset;\r\n      if (\r\n        JSON.parse(sessionStorage.getItem('register')) === null ||\r\n        JSON.parse(sessionStorage.getItem('register')) === undefined\r\n      ) {\r\n        totaldataset = [];\r\n      } else {\r\n        totaldataset = JSON.parse(sessionStorage.getItem('register'));\r\n      }\r\n\r\n      totaldataset.push(this.RegistrationData.value);\r\n      sessionStorage.setItem('register', JSON.stringify(totaldataset));\r\n      this.router.navigate(['']);\r\n    } else {\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2>Register Form</h2>\r\n          <form name=\"register\" (ngSubmit)=\"RegisterUser()\" #RegistrationFormData=\"ngForm\">\r\n            <div class=\"form-group\">\r\n              <label for=\"firtname\">First Name: *</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"firstname\" ngModel #firstname=\"ngModel\"\r\n                placeholder=\"Enter First Name\" name=\"firstname\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"lastname\">Last Name: *</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"lastname\" placeholder=\"Enter Last Name\" ngModel\r\n                #lastname=\"ngModel\" name=\"lastname\" required>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email: *</label>\r\n              <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" ngModel #email=\"ngModel\"\r\n                pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\r\n                name=\"email\" required>\r\n              <div>\r\n                <span class=\"help-block helper\" *ngIf=\"!email.valid && email.touched || submit && !email.valid\">Please\r\n                  Enter Valid Email</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"mobile\">Mobile: *</label>\r\n              <input type=\"number\" class=\"form-control\" id=\"mobile\" placeholder=\"Enter Mobile number\"\r\n                pattern=\"^((\\\\+91-?)|0)?[0-9]{10}$\" ngModel #mobile=\"ngModel\" name=\"mobile\" required>\r\n              <div>\r\n                <span class=\"help-block helper\"\r\n                  *ngIf=\"!mobile.valid && mobile.touched || submit && !mobile.valid\">Please Enter\r\n                  Valid Mobile</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"checkbox\">\r\n              <label>Gender : *</label>\r\n              <br>\r\n              <label> <input type=\"radio\" ngModel #gender=\"ngModel\" name=\"gender\" value=\"male\" required> Male </label>\r\n              <label><input type=\"radio\" name=\"gender\" ngModel #gender=\"ngModel\" value=\"female\" required> Female</label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"mobile\">Address: *</label>\r\n              <textarea class=\"form-control\" rows=\"5\" id=\"address\" placeholder=\"Enter Address\" name=\"address\"\r\n                required></textarea>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"pwd\">Password: *</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\" ngModel\r\n                #password=\"ngModel\" required minlength=\"8\">\r\n              <div>\r\n                <span class=\"help-block helper\"\r\n                  *ngIf=\"!password.valid && password.touched || submit && !password.valid\">Please Enter Valid\r\n                  password</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"confrmpwd\">Confirm Password: *</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"confrmpwd\" minlength=\"8\"\r\n                placeholder=\"Enter Confirm Password\" ngModel #confrmpwd=\"ngModel\" name=\"confpwd\" required>\r\n              <div>\r\n                <span class=\"help-block helper\"\r\n                  *ngIf=\"!confrmpwd.valid && confrmpwd.touched || submit && !confrmpwd.valid\">Please Enter Valid\r\n                  Confirm password</span>\r\n                <span *ngIf=\"passError\" class=\"help-block helper\">Password Mismatch</span>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n@Injectable({ providedIn: 'root' })\r\nexport class apiService {\r\n  public mode: string = 'DEV';\r\n  public url: string = '';\r\n  public loggedIn: Boolean = false;\r\n  constructor(public http: HttpClient, public router: Router) {\r\n    switch (this.mode) {\r\n      case 'DEV': {\r\n        this.url = 'https://jsonplaceholder.typicode.com/todos';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(this.url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}